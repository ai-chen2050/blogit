<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://newzone.top/blogit/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://newzone.top/blogit/rss.xml" rel="self" type="application/rss+xml"/>
    <title>BLAKE CHEN&amp;apos;S HOME</title>
    <link>https://newzone.top/blogit/</link>
    <description>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Tue, 09 Sep 2025 02:09:15 GMT</pubDate>
    <lastBuildDate>Tue, 09 Sep 2025 02:09:15 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>系统</category>
    <category>工具</category>
    <item>
      <title></title>
      <link>https://newzone.top/blogit/posts/2025-09-05-Cosmos-EVM-Chain-integration-Axelar-Bridge.html</link>
      <guid>https://newzone.top/blogit/posts/2025-09-05-Cosmos-EVM-Chain-integration-Axelar-Bridge.html</guid>
      <source url="https://newzone.top/blogit/rss.xml"></source>
      <description>架构示意图 axelar-amplifier Axelar 代码库及文档资源 Axelar 官方文档： 最重要的文档资源：https://docs.axelar.dev/dev/intro 智能合约（桥合约）： Axelar Solidity SDK:&amp;nbsp;https://github.com/axelarnetwork/axelar-cgp-solidity 这是你需要在你自己的合约中导入的库。它提供了与 Axelar 网关交互的接口。 核心合约是&amp;nbsp;IAxelarGateway&amp;nbsp;和&amp;nbsp;IAxelarGasService。 预部署合约地址查询：https://docs.axelar.dev/dev/reference/testnet-contract-addresses&amp;nbsp;（测试网）和&amp;nbsp;https://docs.axelar.dev/dev/reference/mainnet-contract-addresses&amp;nbsp;（主网）。在这里你可以找到 Evmos、Arbitrum、Base 链上的&amp;nbsp;Gateway&amp;nbsp;和&amp;nbsp;GasService&amp;nbsp;合约地址： https://github.com/axelarnetwork/axelar-contract-deployments</description>
      <pubDate>Fri, 05 Sep 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 架构示意图</h2>
<figure><figcaption>axelar-amplifier</figcaption></figure>
<h2> Axelar 代码库及文档资源</h2>
<p>Axelar 官方文档：</p>
<ul>
<li>最重要的文档资源：<a href="https://docs.axelar.dev/dev/intro" target="_blank" rel="noopener noreferrer">https://docs.axelar.dev/dev/intro</a></li>
</ul>
<p>智能合约（桥合约）：</p>
<ul>
<li><strong>Axelar Solidity SDK</strong>:&nbsp;<a href="https://github.com/axelarnetwork/axelar-cgp-solidity" target="_blank" rel="noopener noreferrer">https://github.com/axelarnetwork/axelar-cgp-solidity</a></li>
<li>这是你需要在你自己的合约中导入的库。它提供了与 Axelar 网关交互的接口。</li>
<li>核心合约是&nbsp;<code>IAxelarGateway</code>&nbsp;和&nbsp;<code>IAxelarGasService</code>。</li>
<li><strong>预部署合约地址查询</strong>：<a href="https://docs.axelar.dev/dev/reference/testnet-contract-addresses" target="_blank" rel="noopener noreferrer">https://docs.axelar.dev/dev/reference/testnet-contract-addresses</a>&nbsp;（测试网）和&nbsp;<a href="https://docs.axelar.dev/dev/reference/mainnet-contract-addresses" target="_blank" rel="noopener noreferrer">https://docs.axelar.dev/dev/reference/mainnet-contract-addresses</a>&nbsp;（主网）。在这里你可以找到 Evmos、Arbitrum、Base 链上的&nbsp;<code>Gateway</code>&nbsp;和&nbsp;<code>GasService</code>&nbsp;合约地址：</li>
<li><a href="https://github.com/axelarnetwork/axelar-contract-deployments" target="_blank" rel="noopener noreferrer">https://github.com/axelarnetwork/axelar-contract-deployments</a></li>
</ul>
<p>浏览器：</p>
<ul>
<li><strong>Axelarscan</strong>：<a href="https://axelarscan.io/" target="_blank" rel="noopener noreferrer">https://axelarscan.io/</a>&nbsp;用于追踪跨链交易状态。</li>
</ul>
<p>JavaScript/TypeScript SDK：</p>
<ul>
<li><strong>AxelarJS SDK</strong>:&nbsp;<a href="https://github.com/axelarnetwork/axelarjs-sdk" target="_blank" rel="noopener noreferrer">https://github.com/axelarnetwork/axelarjs-sdk</a></li>
<li>这个 SDK 非常有用，可以帮助你前端应用估算跨链 Gas 费、查询链状态、构造交易等。</li>
</ul>
<p>示例代码库：</p>
<ul>
<li><strong>Axelar 示例</strong>：<a href="https://github.com/axelarnetwork/axelar-examples" target="_blank" rel="noopener noreferrer">https://github.com/axelarnetwork/axelar-examples</a></li>
<li>这里面有非常完整的跨链代币转移（ERC-20）和通用消息传递（GMP）的示例代码，是你学习和开发的最佳起点。</li>
</ul>
<h2> Hetu 开发网资源</h2>
<ul>
<li>开发环境 API：161.97.161.133:18545</li>
<li>NodeJS 服务框架：<a href="https://github.com/hetu-project/hetu-tnservices-faucet" target="_blank" rel="noopener noreferrer">https://github.com/hetu-project/hetu-tnservices-faucet</a></li>
<li>操作账号：<code>0xEFc9A81140D69Bafaa3D6B866a51818318EA645c</code></li>
</ul>
<h2> Base chain 相关资源</h2>
<h3> 合约地址</h3>
<ul>
<li>测试网: <a href="https://docs.axelar.dev/dev/reference/testnet-contract-addresses" target="_blank" rel="noopener noreferrer">https://docs.axelar.dev/dev/reference/testnet-contract-addresses</a></li>
<li>主网：<a href="https://docs.axelar.dev/dev/reference/mainnet-contract-addresses" target="_blank" rel="noopener noreferrer">https://docs.axelar.dev/dev/reference/mainnet-contract-addresses</a></li>
</ul>
<h2> Arbitum chain 资源</h2>
<h2> 计划与排期</h2>
]]></content:encoded>
    </item>
    <item>
      <title>加速 SMB 协议，让 PC 变身小型 NAS</title>
      <link>https://newzone.top/blogit/posts/2017-09-03-smb_lan_sharing.html</link>
      <guid>https://newzone.top/blogit/posts/2017-09-03-smb_lan_sharing.html</guid>
      <source url="https://newzone.top/blogit/rss.xml">加速 SMB 协议，让 PC 变身小型 NAS</source>
      <description>Windows 系统开启 SMB 协议： 打开「控制面板」窗口，在「类别」查看方式下单击「程序」。 打开「程序」窗口，单击「启用或关闭 windows 功能」。 打开「windows 功能」窗口，勾选 SMB 直通。 勾选「远程差分压缩 API 支持」。</description>
      <category>系统</category>
      <pubDate>Sun, 03 Sep 2017 20:57:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Windows 系统开启 SMB 协议：</p>
<ol>
<li>
<p>打开「控制面板」窗口，在「类别」查看方式下单击「程序」。</p>
<figure><img src="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「程序」窗口，单击「启用或关闭 windows 功能」。</p>
<figure><img src="https://pic1.zhimg.com/v2-36207f67a5eb3aeb8ee7c1ae855b13dc_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「windows 功能」窗口，勾选 SMB 直通。</p>
<figure><img src="https://pic3.zhimg.com/v2-b1feb5554e6f1da003266be9cb470dfe_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>勾选「远程差分压缩 API 支持」。</p>
<figure><img src="https://pic4.zhimg.com/v2-c5fc3e3d771b6e4bd2516372c69b340b_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>网上很多教程都要求关闭“远程差分压缩”复选框，这是对“远程差分压缩”的误解。</p>
<p>官方解释：远程差分压缩 (RDC) 功能是一组应用程序编程接口 (API)，这些应用程序可用于确定某个文件集是否发生了变化，如果是，就检测哪部分文件进行了更改。RDC 检测文件中数据的插入、删除和重新排列，使应用程序能够仅复制文件的已更改部分。这对于在有限带宽网络（如广域网 (WAN) 连接）上复制文件非常有用。</p>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>抛弃迅雷，Aria2 新手入门</title>
      <link>https://newzone.top/blogit/posts/2018-05-15-aria2_a_new_download_tool.html</link>
      <guid>https://newzone.top/blogit/posts/2018-05-15-aria2_a_new_download_tool.html</guid>
      <source url="https://newzone.top/blogit/rss.xml">抛弃迅雷，Aria2 新手入门</source>
      <description>迅雷已经用了 10 年，一直将它视为最快也最方便的下载工具，也一直购买迅雷会员。 但是，迅雷已经堕落。 thunder:\\ 迅雷专属链接越来越少，下载基本是磁力链接和 BT 种子； 迅雷会员加速不再有效，大量资源速度为 0（会员虽然还有一年多，但已经没用了）； 迅雷关闭旧版功能，迫使大家升级迅雷 U 享版，但升级后，发现新版迅雷会强制接收所有下载。 有些小文件，我只想用浏览器直接下载，而一些不想下载的链接，也会被迅雷非常敏感地感应到，强制下载，真的特别流氓。</description>
      <category>工具</category>
      <pubDate>Tue, 15 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>迅雷已经用了 10 年，一直将它视为最快也最方便的下载工具，也一直购买迅雷会员。</p>
<p>但是，<strong>迅雷已经堕落</strong>。</p>
<ul>
<li><code>thunder:\\</code> 迅雷专属链接越来越少，下载基本是磁力链接和 BT 种子；</li>
<li>迅雷会员加速不再有效，大量资源速度为 0（会员虽然还有一年多，但已经没用了）；</li>
<li>迅雷关闭旧版功能，迫使大家升级迅雷 U 享版，但升级后，发现新版迅雷会强制接收所有下载。
<blockquote>
<p>有些小文件，我只想用浏览器直接下载，而一些不想下载的链接，也会被迅雷非常敏感地感应到，强制下载，真的特别流氓。</p>
</blockquote>
</li>
</ul>
<h2> 为什么选择 Aria2？</h2>
<p>Aria2 下载功能比较全面，支持 BT 和磁力链接，性能也相当不错，<strong>速度不比迅雷慢</strong>。</p>
<p>虽然没有原生应用界面，配置也比较麻烦，但这些可以通过懒人包轻松解决。</p>
<h2> 真·懒人包</h2>
<p>Aria2 真·懒人包无需配置，下载即可使用，适合不想折腾的人。</p>
<p>真·懒人包：<a href="https://www.seoipo.com/software/Aria2/" target="_blank" rel="noopener noreferrer">https://www.seoipo.com/software/Aria2/</a></p>
<p>将懒人包解压到 <code>D:\Aria2</code>，点击 <code>AriaNg 启动器.exe</code> 即可开始下载。两个启动器任选其一，都集成了后端服务和前端 UI，无需启动其他程序。包内均为开源绿色软件，不涉及任何隐私和安装，AutoHotkey 插件容易被误报。</p>
<p>2023.03.26 重构启动器，更新 Aria2 1.36.0，AriaNG 1.3.3，并增加 bt-tracker 至 134 个，以便 BT 和磁力链接提速。</p>
<p>新增功能：任务开始、完成和出错时，会推送系统通知，可在 aria2.conf 的特别功能区块中设置通知的开启与关闭，此功能由 @我真的爱发明 提出。</p>
<hr>
<p>如果不想使用懒人包，想了解 Aria2 背后的设置，请往下看配置步骤。</p>
<h2> Aria2 设置</h2>
<ol>
<li>
<p>下载 <a href="https://aria2c.com/archiver/aria2.zip" target="_blank" rel="noopener noreferrer">Aria2 快速设置包</a>或<a href="https://wwz.lanzouf.com/iROZE0eai3xe" target="_blank" rel="noopener noreferrer">备用链接</a>，将其解压到存放文件夹，例如 <code>D:\Aria2</code>。</p>
</li>
<li>
<p>官网下载 <a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener noreferrer">Aria2 程序</a>（Windows 选择 <a href="https://github.com/aria2/aria2/releases/download/release-1.36.0/aria2-1.36.0-win-64bit-build1.zip" target="_blank" rel="noopener noreferrer">aria2-1.36.0-win-64bit-build1.zip</a>），然后解压到快速设置包的存放文件夹中，替代其中的 <code>aria2c.exe</code> 程序。</p>
<figure><img src="https://img.newzone.top/20191210232831.png" alt="" tabindex="0" loading="lazy"><figcaption>GitHub 官方仓库下载 Aria2</figcaption></figure>
</li>
<li>
<p>点击 <code>aria2.exe</code> 启动 aria2，系统托盘区会同步出现应用图标。</p>
</li>
<li>
<p>参照<a href="https://wwz.lanzouf.com/iwv6f0eadq9i" target="_blank" rel="noopener noreferrer">懒人包配置</a>修改 <code>aria2.conf</code>，更多设置参考 <a href="https://aria2.github.io/manual/en/html/aria2c.html" target="_blank" rel="noopener noreferrer">aria2c 官方文档</a>。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><a class="footnote-anchor" id="footnote-ref1">
<p>修改默认下载目录：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改服务器默认连接数：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>开启 BT 下列设置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></a><p><a class="footnote-anchor" id="footnote-ref1">在文档最后一行添加 BT trackers，最新 trackers 列表从 </a><a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt" target="_blank" rel="noopener noreferrer">ngosang/trackerslist</a> 中获取，tracker 中用 <code>,</code> 隔开。</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其他设置不常用，有时间的话，你可以慢慢调整。</p>
</li>
<li>
<p>Aira2 没有原生应用界面，可以输入网址 <code>http://aria2c.com</code> 使用第三方下载界面。该页面会自动与本地的 aira2c 程序关联，实现下载管理，建议把其收藏到书签，以便日后使用。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><a class="footnote-anchor" id="footnote-ref2">
</a></li><a class="footnote-anchor" id="footnote-ref2">
</a></ol><a class="footnote-anchor" id="footnote-ref2">
</a><p><a class="footnote-anchor" id="footnote-ref2">如果出现「Aria2 RPC 服务器错误」，请检查 JSON-RPC Path 是否为 <code>http://localhost:6800/jsonrpc</code>。注意，页面<strong>链接须为 http 而非 https</strong>。如果依然报错，则说明 aria2.conf 配置有误，建议下载 </a><a href="https://www.seoipo.com/software/Aria2/" target="_blank" rel="noopener noreferrer">真·懒人包</a>。</p>
<h2> Aria2 进阶</h2>
<h3> 更换 Aria2 界面</h3>
<p><a href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener noreferrer">AriaNg</a> 的界面类似传统的下载软件，使用简单。</p>
<figure><img src="https://img.newzone.top/20180516104758.png" alt="" tabindex="0" loading="lazy"><figcaption>AriaNg 界面</figcaption></figure>
<p>使用方法：下载并解压 <a href="https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip" target="_blank" rel="noopener noreferrer">AriaNg</a>，运行目录下的 index.html，打开 Aria2 WebUI 界面，将页面链接收藏到书签以便后续使用 Aria2。</p>
<p>如果 AriaNg 页面出现报错，则从页面左侧选择「AriaNg 设置」&gt;「RPC」，检查 RPC 地址，默认地址为 <code>localhost:6800</code>。</p>
<h3> Aira2 下载预热</h3>
<p>Aira2 下载预热是 BT 下载前的必备步骤，否则速度容易很慢。</p>
<p>找一个热门影视的 BT 种子（注意是种子，不是磁力链接），然后下载并挂着做种。过几个小时后，退出 Aria2 或者等待 Aria2 会话自动保存，你会发现 dht.dat 从空文件变成有数据了，之后的 BT 下载速度就会快很多。</p>
<blockquote>
<p>很多 BT 客户端一样，Aria2 有个 dht.dat 文件 (开启 ipv6 还有个 dht6.dat)，这玩意用于存储一种叫做 DHT Routing Table 的东西，DHT 网络由无数节点组成，你接触到一个后能通过它接触到更多的节点，Aria2 我记得是有内置的节点，但是！如果你在 Aria2 第一次运行的时候直接下载磁力链接或者冷门种子，你很可能遇到连 MetaData 都无法获取的情况，这就是因为第一次只是初始化 dht.dat 文件，你本地不存在 DHT Routing Table 的缓存，所以你无法从 DHT 网络中获取足够的数据。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><a class="footnote-anchor" id="footnote-ref3">
</a></blockquote><a class="footnote-anchor" id="footnote-ref3">
</a><h3><a class="footnote-anchor" id="footnote-ref3"></a> 接管浏览器下载</h3>
<p>如果想用 Aria2 接管浏览器的下载管理，需安装插件/扩展。</p>
<ul>
<li>Chrome：安装<a href="https://chrome.google.com/webstore/detail/nimeojfecmndgolmlmjghjmbpdkhhogl" target="_blank" rel="noopener noreferrer">添加到 aria2</a> 扩展。下载包可以用<a href="https://wwi.lanzoui.com/i4Fmeetsdaj" target="_blank" rel="noopener noreferrer">国内搬运地址</a>，或是懒人包内置文件。
如果浏览器无法直接安装 <code>.crx</code> 格式的扩展，可以将文件解压到新文件夹「xxx」，然后在浏览器的地址栏输入 <code>chrome://extensions/</code> 开启开发者模式，点击加载已解压的扩展程序，选中刚才解压的文件夹「xxx」。</li>
<li>Firefox：安装 <a href="https://addons.mozilla.org/en-US/firefox/addon/aria2-integration/" target="_blank" rel="noopener noreferrer">Aria2 Download Manager Integration</a> 扩展，可参考下方的 Chrome 扩展设置进行配置。</li>
</ul>
<p>安装完「添加到 aria2」扩展后，右键扩展图标，点击「选项」&gt;「设置」，设置如下：</p>
<ul>
<li>最小监视：<code>10</code> M，低于该容量将由浏览器下载。如果 Aria2 要接手所有下载，可以将最小监视设为 <code>0.001</code>。</li>
<li>JSON-RPC 链接：<code>http://localhost:6800/jsonrpc</code>。</li>
</ul>
<p>注意：「添加到 aria2」图标显示的 <code>en</code> 表示处于开启状态，<code>dis</code> 表示处于关闭状态，点击图标可以切换使用状态。</p>
<h2> Aria2 启动器</h2>
<p>每次启动 Aria2 下载时，都需要执行两个文件：打开 WebUI 链接和 aria2c，这有点麻烦。因此，我使用 AutoHotkey 做了一个启动器，它可以检测 aria2c 运行状态，并一键打开下载界面，以简化 Aria 的启动过程。</p>
<p>下载 <a href="https://wwz.lanzouf.com/iqud50ebl06d" target="_blank" rel="noopener noreferrer">Aria2 启动器</a>，然后将其解压到 Aria2 运行目录，例如 <code>D:\Aria2</code>。Aria2 启动器提供了两种方式，只需选择其中一种即可。</p>
<ul>
<li><strong>AriaNg 启动器</strong>（推荐）：使用 AriaNg 本地版作为下载管理界面。在使用该启动器前，需将 <a href="https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip" target="_blank" rel="noopener noreferrer">AriaNg</a> 解压到 Aria2 目录下，并将文件夹名改为 AriaNg，然后打开文件 index.html，该文件位于 <code>Aria2\AriaNg\index.html</code>。</li>
<li><strong>Aria2c 启动器</strong>：将 <code>https://aria2c.com</code> 作为默认下载界面。该设置较旧，需确保 JSON-RPC Path 为 <code>http://localhost:6800/jsonrpc</code>。</li>
</ul>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/30666881" target="_blank" rel="noopener noreferrer">Aria2 基础上手指南</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://www.appinn.com/aria2-in-windows-setup/" target="_blank" rel="noopener noreferrer">aria2 懒人安装教程</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="http://www.senra.me/solutions-to-aria2-bt-metalink-download-slowly/" target="_blank" rel="noopener noreferrer">解决 Aria2 BT 下载速度慢没速度的问题</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>抛弃又贵又难用的录屏软件，3 分钟入门 FFmpeg</title>
      <link>https://newzone.top/blogit/posts/2022-11-03-ffmpeg_screen_recording.html</link>
      <guid>https://newzone.top/blogit/posts/2022-11-03-ffmpeg_screen_recording.html</guid>
      <source url="https://newzone.top/blogit/rss.xml">抛弃又贵又难用的录屏软件，3 分钟入门 FFmpeg</source>
      <description>当所有的录屏应用都无法满足我时，我的目光投向了那个最终极的命令行工具，FFmpeg。 开始自我监控后，录屏工具的重要性迅速提升，我遇到的问题也越来越多。因为我录屏主要是为了自我监控，所以我需要的帧率不必很高，甚至越低越好，分辨率也不必和屏幕一致，只要能看清我在做什么就可以了。</description>
      <category>工具</category>
      <pubDate>Thu, 03 Nov 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>当所有的录屏应用都无法满足我时，我的目光投向了那个最终极的命令行工具，FFmpeg。</p>
</blockquote>
<p>开始<a href="https://newzone.top/posts/2022-05-22-surveillance_video_for_myself.html" target="_blank" rel="noopener noreferrer">自我监控</a>后，录屏工具的重要性迅速提升，我遇到的问题也越来越多。因为我录屏主要是为了自我监控，所以我需要的帧率不必很高，甚至越低越好，分辨率也不必和屏幕一致，只要能看清我在做什么就可以了。</p>
<p>最初，我使用了免费开源的 <a href="https://www.videolan.org/vlc/" target="_blank" rel="noopener noreferrer">VLC</a>，这也是我监控文章中采用的方案。它能调节输出视频的编码、帧率、格式，但操作麻烦，而且不能同时录屏和摄像头，暂停录制也容易导致程序崩溃。</p>
<p>然后，我尝试了 <a href="https://obsproject.com/" target="_blank" rel="noopener noreferrer">OBS</a>，它的录制功能极其强大，可以任意添加摄像头、文字、图像等，但输出限制多，生成的视频体积过大。同时，OBS 不支持录制画面与直播画面分开，而我平常习惯边开直播边工作，这令我只能放弃 OBS 录屏。</p>
<p>接着，我发现了 7.8k Star 的 <a href="https://github.com/MathewSachin/Captura/releases/tag/v8.0.0" target="_blank" rel="noopener noreferrer">Captura</a>，它的自由度较高，能自定义叠加元素，但项目已于 2018 年停止更新，使用时经常碰到莫名其妙的报错，很不稳定。</p>
<p>免费的不行，那么收费的会不会好点呢？</p>
<p>我用 <a href="https://www.bandicam.cn/" target="_blank" rel="noopener noreferrer">Bandicam</a> 录制了一周的视频。与 Captura 相比，Bandicam 的稳定性有了很大的提升，不会突然崩溃，还有降噪和内录扬声器功能，但它偶尔会丢失摄像头，导致无法自动录屏。</p>
<p>再后，我测试了其他几款录屏应用：</p>
<ul>
<li>相机：Windows 自带应用，录制方便，但输出选项较少，限制多。</li>
<li><a href="https://www.flashbackrecorder.com/zh/express/" target="_blank" rel="noopener noreferrer">FlashBack Express</a>：能调节帧率，画面镜像，虚化背景，但免费版只支持 2 小时内的录制。</li>
<li><a href="https://mirillis.com/zh/products/action.html" target="_blank" rel="noopener noreferrer">Mirillis Action!</a>：高帧率录制游戏，自动分割视频，自定义叠加元素，但输入帧率不能自由调整，最低只能 15 帧，试用期 30 天。</li>
<li><a href="https://ohsoft.net/eng/ocam/intro.php?cate=1002" target="_blank" rel="noopener noreferrer">oCam</a>：打着免费招牌但有弹窗广告，且输出视频偏大。</li>
<li><a href="https://getsharex.com/" target="_blank" rel="noopener noreferrer">ShareX</a>：免费开源强大的截图软件，具备录屏功能，能调节编码和帧率，但只能单一录屏或录像。</li>
</ul>
<p>我一共试了 9 款录屏软件，体验都不太好，软件普遍存在无法自定义画面、不兼容、稳定性低的问题。再加上自我监控方案的单次录制时间超过 12 小时，理想的帧率（0.02 帧）远超出应用最低 15-30 帧的下限。因此，我需要另外找一款稳定、兼容性高、又能自由定制录屏方案的工具，最终找到的是 FFmpeg。</p>
<h2> 为什么 FFmpeg</h2>
<p>FFmpeg 是处理多媒体内容 (如音频、视频、字幕和相关元数据) 的库和工具的集合，支持在 Linux、MacOS 和 Windows 平台上运行。它提供了录制、转换以及流化音视频的完整解决方案。</p>
<p>上文尝试的录屏、视频处理工具几乎都是基于 FFmpeg 而开发的。不仅能实现它们的所有功能，还具有超高的稳定性和兼容性。与 FFmpeg 相比，现成的录屏应用的优势仅在于其美观的界面和简单易上手的录制方案。</p>
<p>若要跳出软件的限制，自由地定制录屏效果，避免莫名其妙的 bug，更底层的 FFmpeg 反而是更稳定有效的方案。命令行录制看起来复杂，但实际上只需要熟悉十几个参数，你就能定制专属录屏方案，个人感觉比熟悉 Bandicam 的软件界面更简单。</p>
<p>以我在 Windows 上的桌面录制方案为例，从多屏幕中指定一个 2K 区域进行录制，并在画面右下角添加 360P 的摄像头录制角度，然后以帧率 0.02 输出监控视频。按 <code>q</code> 则停止录制。</p>
<figure><img src="https://img.newzone.top/2022-11-03-13-16-44.png" alt="" tabindex="0" loading="lazy"><figcaption>输出画面如图例</figcaption></figure>
<h2> 录屏准备</h2>
<h3> 配置 FFmpeg</h3>
<ol>
<li>
<p>下载最新版 <a href="https://github.com/BtbN/FFmpeg-Builds/releases/tag/latest" target="_blank" rel="noopener noreferrer">FFmpeg</a>，Windows 环境选择 <code>ffmpeg-master-latest-win64-gpl.zip</code>，GPL 版本包含了所有依赖项。</p>
</li>
<li>
<p>将 FFmpeg 解压到任意文件夹，比如 <code>D:\Backup\Libraries\Documents\ffmpeg</code>。</p>
</li>
<li>
<p>开始栏搜索「编辑系统环境变量」，点击进入「环境变量」。</p>
</li>
<li>
<p>新建用户变量 <code>FFMPEG_HOME</code>，变量值设为刚才的解压路径 <code>D:\Backup\Libraries\Documents\ffmpeg</code>。</p>
<figure><img src="https://img.newzone.top/2022-11-01-18-13-49.png" alt="" tabindex="0" loading="lazy"><figcaption>FFmpeg 全局变量设置</figcaption></figure>
</li>
</ol>
<p>配置完成后，在终端输入 ffmpeg 即可启动。</p>
<figure><img src="https://img.newzone.top/2022-11-01-18-17-13.png" alt="" tabindex="0" loading="lazy"><figcaption>FFmpeg 配置成功</figcaption></figure>
<h3> 配置视频/音频设备</h3>
<p>FFmpeg 的录制命令 gdigrab 不支持音频录制，也不支持直接调用摄像头，此时需使用开源的 <a href="https://github.com/rdp/screen-capture-recorder-to-video-windows-free/releases" target="_blank" rel="noopener noreferrer">screen-capture-recorder-to-video-windows-free</a> 增强 FFmpeg 的录制功能，其最新版本为 0.12.12。</p>
<p>通过命令 <code>ffmpeg -list_devices true -f dshow -i dummy</code> 查看支持的 Windows DirectShow 输入设备，采集视频和音频设备，包含设备名称，设备类型等信息。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"> 这里得到了视频设备「USB2.0 PC CAMERA」和音频设备「Analogue 1/2 (Audient iD4)」，之后会用到。</a></p><a class="footnote-anchor" id="footnote-ref1">
<figure><img src="https://img.newzone.top/2022-11-03-10-33-52.png" alt="" tabindex="0" loading="lazy"><figcaption>查看视频/音频设备列表</figcaption></figure>
</a><h2><a class="footnote-anchor" id="footnote-ref1"></a> 录制屏幕</h2>
<p>从坐标 0:0 开始圈定出一个 2560x1440 的屏幕范围，然后以 每 50 秒截图 1 帧，输出为 mp4 格式的视频，录制命令为 <code>ffmpeg -f gdigrab -r 20/1001 -draw_mouse 1 -offset_x 0 -offset_y 0 -video_size 2560x1440 -i desktop -s 1280x720 output.mp4</code>。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><a class="footnote-anchor" id="footnote-ref2">
<p>以下是录制命令的说明：</p>
</a><ul><a class="footnote-anchor" id="footnote-ref2">
</a><li><a class="footnote-anchor" id="footnote-ref2"><code>-f gdigrab</code> 使用 FFmpeg 内置的 Windows 屏幕录制命令 </a><a href="https://ffmpeg.org/ffmpeg-all.html#gdigrab" target="_blank" rel="noopener noreferrer">gdigrab</a>，录制对象可为全屏、指定范围和指定程序。MacOS 录屏方法为 <a href="https://ffmpeg.org/ffmpeg-devices.html#avfoundation" target="_blank" rel="noopener noreferrer">AVFoundation</a>，Linux 录屏方法为 <a href="https://ffmpeg.org/ffmpeg-all.html#x11grab" target="_blank" rel="noopener noreferrer">x11grab</a>。</li>
<li><code>-r 20/1001</code> 帧率为 0.02，每 50 秒录制一帧。主流大家喜欢用 <code>-r 30</code> 录制，但由于这是用于每日监测，所以我采用了超低帧率。</li>
<li><code>-c:v libx264</code> 是用于设置视频编解码器，一般可不填使用默认配置，<code>-c:a</code> 为音频编码。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></li><a class="footnote-anchor" id="footnote-ref3">
<li><code>-draw_mouse 1</code> 在 gdigrab 录制的视频中显示鼠标。</li>
<li><code>-offset_x 0 -offset_y 0 -video_size 2560x1440</code> 为起始坐标和选定录制范围。坐标可使用截图软件获取，比如我用 Snipaste，点击 F1 后进入截图界面，鼠标经过当前区域就会显示坐标。</li>
<li><code>-s 1280x720</code> 用 scale 方法，设置视频分辨率为 720p。</li>
<li><code>-i desktop</code> 为输入设备，指代显示屏。</li>
<li><code>out.mp4</code> 为输出视频的名字与格式。默认保存在命令运行文件夹，可以在此处设置输出位置，如 <code>D:\Backup\Libraries\Desktop\out.mp4</code>。或使用时间对视频命名，将 <code>out.mp4</code> 替换为 <code>-f segment -segment_time 2 -strftime 1 %Y-%m-%d_%H-%M-%S.mp4</code>，视频样例名为 <code>2022-11-06_10-53-17.mp4</code>。</li>
</a></ul><a class="footnote-anchor" id="footnote-ref3">
</a><p><a class="footnote-anchor" id="footnote-ref3">除上方命令外，FFmpeg 还有许多参数可以设置，比如 <code>-pix_fmt yuv420p -preset ultrafast</code> 提升编码速度，<code>-filter:v 'setpts=0.1*PTS'</code> 减少视频抽样，但 setpts 不是视频加速，对于低帧率的视频影响很小。<sup class="footnote-ref"></sup></a><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"> <sup class="footnote-ref"></sup></a><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></p><a class="footnote-anchor" id="footnote-ref5">
</a><h2><a class="footnote-anchor" id="footnote-ref5"></a> 录制摄像头</h2>
<p>然后，我们使用上方获取的视频设备，即可用摄像头进行录制，如 <code>ffmpeg -f dshow -i video='USB2.0 PC CAMERA' output.mp4</code>。</p>
<p>如果录屏的同时需要录制音频，则在命令中加入之前获取的音频设备，命令变为 <code>ffmpeg -f dshow -i audio='Analogue 1/2 (Audient iD4)' -f dshow -i video='USB2.0 PC CAMERA' output.mp4</code>。</p>
<h2> 输出视频：画中画</h2>
<p>清楚如何用 FFmpeg 录制屏幕、摄像头和音频后，我需要将他们放置于同一画面中，将摄像头画面放在录制画面的右下侧，并用 overlay 方法将其置于屏幕画面的上方，遮挡对应区域。<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup><a class="footnote-anchor" id="footnote-ref6"> <sup class="footnote-ref"></sup></a><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></p><a class="footnote-anchor" id="footnote-ref7">
<p>综合了以上三步，最终的录制命令为：<code>ffmpeg -f gdigrab -r 1 -draw_mouse 1 -offset_x 0 -offset_y 0 -video_size 2560x1440 -i desktop -s 1280x720 -b:v 0 -crf 32 -f segment -segment_time 2 -strftime 1 %Y-%m-%d_%H-%M-%S.mp4 -f dshow -i audio='Analogue 1/2 (Audient iD4)' -f dshow -s 640x480 -i video='USB2.0 PC CAMERA' -filter_complex 'overlay=W-w-1:H-h-50' -y</code>。</p>
<ul>
<li><code>-b:v 0 -crf 32</code> 是将视频比特率设置为最小，同时使用恒定质量，CRF 的范围可以从 0（最佳质量）到 63（最小文件大小）。</li>
<li><code>overlay=W-w-1:H-h-1</code> 这是一个坐标，指浮层放在右下角，距离边缘 1px。</li>
<li><code>-y</code> 遇到选项时，默认执行 yes 命令，比如覆盖同名的视频文件。</li>
</ul>
<p>命令中的录制帧率较低，但不会影响同时录制的音频。之后的录屏只需在终端中运行这段命令，就会自动录制屏幕，在终端上按 <code>q</code> 即可停止录制。使用 FFmpeg 后，我的录屏再也没有莫名其妙的崩溃了。</p>
</a><h2><a class="footnote-anchor" id="footnote-ref7"></a> 常见问题</h2>
<h3> Could not set video options</h3>
<p>报错 <code>Could not set video options</code>，多是由于录制设置的帧率、分辨率超出设备范围造成的。使用命令 <code>ffmpeg -f dshow -list_options true -i video='USB2.0 PC CAMERA' -loglevel debug</code> 检查设备的输出属性，调整录制属性。</p>
<h3> real-time buffer</h3>
<p>报错 <code>real-time buffer [xxxxxx] [video input] too full or near too full (181% of size: 3041280 [rtbufsize parameter])! frame dropped!</code>，解决方案参考 <a href="https://github.com/rdp/screen-capture-recorder-to-video-windows-free/issues/136" target="_blank" rel="noopener noreferrer">issue 136</a>。尽管我仍然遇到了这个错误，但它并未影响录屏的效果。</p>
<h3> 摄像头分辨率错误</h3>
<p>如果摄像头画面出现裁切，分辨率与预期不同，可以检查摄像头录制属性和摄像头应用输出分辨率。例如，部分版本的 SplitCam Video Driver 将外场景尺寸固定为 4:3，导致输出画面被裁剪，因此只能更换其他视频输入源。</p>
<h3> 录制画面偏移</h3>
<p>如果录制画面比例异常或画幅偏移，这可能是 Windows 的屏幕缩放造成的。可以在 ffmpeg.exe 的属性中勾选「高 DPI 缩放替代」来解决这个问题。</p>
<h3> 脚本启动报错</h3>
<p>使用 AutoHotkey 等外部脚本启用录屏命令时，报错 <code>Could not find video device with name [USB2.0]</code>，而正确设备名是「USB2.0 PC CAMERA」。检查录制命令中是否使用了双引号，需将双引号 <code>"</code> 替换为单引号 <code>'</code>。</p>
<h2> 后续</h2>
<p>如果读了 FFmpeg 的文档，就会发现这个工具异常强大，很多采用 FFmpeg 的工具都没有将它的功能性发挥到极致，以比较普适的功能尽可能地换取软件操作的易用性。而对于像我这样有一个比较小众、甚至特殊需求的人来说，已经打包好的图形界面应用就很有可能力有不逮。这时，FFmpeg 这种底层的命令行工具可能就是唯一的选择，而且用了之后会发现，它在功能强大的同时还更加稳定，自定义能力也更强。而且，如果跨过了起初对于命令行的恐惧，理解和上手其实也不算多难。</p>
<p>此外，FFmpeg 的功能不止录屏，它还有诸如连续截图、视频转帧率改大小等多种玩法，非常强大。</p>
<p>前几天，群里有人分享了快速生成 FFmpeg 命令的工具 <a href="https://ffmpeg.guide/" target="_blank" rel="noopener noreferrer">FFmpeg.guide</a>。本以为能帮新手快速入门，使用后却感觉不实用。FFmpeg 最快入门的方法还是得看官方文档，也有一些爱好者整理翻译了相关的中文/视频教程。前期会耗费一些时间，但只要定制好自己要的命令，之后就能一直使用。</p>
<p>当然，本文的目的是分享我监控自己的延伸，分享使用 FFmpeg 录屏的入门方法，而非完全掌握，因此只介绍了录屏相关的核心命令。如果有需要，还是推荐研究一下官方文档，或者跟着我做的试一试，说不定就有新收获。</p>
<p>本文于「<a href="https://sspai.com/post/76637" target="_blank" rel="noopener noreferrer">少数派首发</a>」。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://blog.csdn.net/m0_60352504/article/details/126762161" target="_blank" rel="noopener noreferrer">ffmpeg 录屏命令</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://blog.csdn.net/JineD/article/details/123057086" target="_blank" rel="noopener noreferrer">ffmpeg 基础使用</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="https://ffmpeg.org/ffmpeg-codecs.html#libx265" target="_blank" rel="noopener noreferrer">libx265 编码说明</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote4" class="footnote-item"><p><a href="https://magiclen.org/x265-preset/" target="_blank" rel="noopener noreferrer">x265 的 preset 与编码速度、视频画质以及比特率的关联</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote5" class="footnote-item"><p><a href="https://blog.csdn.net/zhying719/article/details/123059209" target="_blank" rel="noopener noreferrer">FFmpeg 音视频倍速控制</a> <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote6" class="footnote-item"><p><a href="https://www.cnblogs.com/leisure_chn/p/10434209.html" target="_blank" rel="noopener noreferrer">FFmpeg 中 overlay 滤镜用法 - 水印及画中画</a> <a href="#footnote-ref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote7" class="footnote-item"><p><a href="https://blog.csdn.net/guanyijun123/article/details/121270650" target="_blank" rel="noopener noreferrer">ffmpeg 调整缩放裁剪视频的基础知识 (转)</a> <a href="#footnote-ref7" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
  </channel>
</rss>